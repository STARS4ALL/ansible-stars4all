# {{ ansible_managed }}
# ----------------------------------------------------------------------
# Copyright (c) 2014 Rafael Gonzalez.
#
# See the LICENSE file for details
# ----------------------------------------------------------------------


[tessdb]

# Global section

# File where log is stored, if any
# Leave blank if no logfile is desired
# Not reloadable property
log_file = {{ tessdb_config.log.path | default('/var/log/tessdb.log') }}

# namespace log level (debug, info, warn, error, critical)
# Reloadable property
log_level = {{ tessdb_config.tessdb.log_level | default('info') }}

# Log activity for *selected instruments* only and *all* namespaces
# as opossed to the general log
# comma separated list of TESS instrument names.
# Leave blank if not used
log_selected = {{ tessdb_config.tessdb.tess_dbglist | default([]) | join(',') }}

#------------------------------------------------------------------------#
[mqtt]

# MQTT Client config

# Broker to connect. Twisted-style endpoint
# Not reloadable property
broker = {{ tessdb_config.mqtt.broker | default('tcp:test.mosquitto.org:1883') }}

# Username/password credentials
# leave blank if not needed
# non reloadable properies
username = {{ tessdb_config.mqtt.username | default('') }}
password = {{ tessdb_config.mqtt.password | default('') }}

# Keepalive connection (in seconds)
# Not reloadable property
keepalive = {{ tessdb_config.mqtt.keepalive | default(60) }}

# MQTT Topic to subscribe for automatic registration
# Leave blank to disable automatic registration
# Reloadable property
tess_topic_register = {{ tessdb_config.mqtt.tess_topic_register | default('STARS4ALL/register') }}

# MQTT topics to subscribe for readings
# Reloadable property
tess_topics = {{ tessdb_config.mqtt.tess_topics | default(['STARS4ALL/+/reading']) | join(',') }} 

# MQTT payload validation
# Reloadable property
validation = {{ tessdb_config.mqtt.validation | default(True) | ternary('yes','no') }}

# Instrument White List.
# Discards instruments readings and registrations 
# whose name do not belong to this comma separated list
# Useful to keep your own readings database when sharing
# MQTT topic with other TESS instruments
# Leave blank if not used.
# Reloadable property
tess_whitelist = {{ tessdb_config.mqtt.tess_whitelist | default([]) | join(',') }}

# Instrument Black List.
# Discards instruments readings and registrations 
# whose name belong to this comma separated list
# Useful to discard particular "noisy" instruments
# with lots of readings
# Leave blank if not used.
# Reloadable property
tess_blacklist = {{ tessdb_config.mqtt.tess_blacklist | default([]) | join(',') }}

# namespace log level (debug, info, warn, error, critical)
# Reloadable property
log_level = {{ tessdb_config.mqtt.log_level | default('info') }}

# MQTT PDUs log level. 
# See all PDU exchanges with 'debug' level. Otherwise leave it to 'info'
# Reloadable property
protocol_log_level = {{ tessdb_config.mqtt.protocol_log_level | default('info') }}

#------------------------------------------------------------------------#

[filter]
# Invalid samples filter
# This module filters out invalid incoming data by analyzing a window
# of samples before and after a given one.

# Filter depth (window size)
# Should be an odd, number, minimun 3, recommended 7.
# depth = 3 -> keep 1 invalid sample  after the valid ones
# depth = 5 -> keep 2 invalid samples after the valid ones
# depth = 7 -> keep 3 invalid samples after the valid ones
# Not reloadable property
depth = {{ tessdb_config.filter.depth | default(7) }}

# Enable flag
# If not enabled, the new reading is passed directly to the database input queue
# Reloadable property
enabled = {{ tessdb_config.filter.enabled | default(False) | ternary('yes','no') }}

# namespace log level (debug, info, warn, error, critical)
# Reloadable property
log_level = {{ tessdb_config.filter.log_level | default('info') }}

#------------------------------------------------------------------------#

# Database configuration section
[dbase]

# Database type. Currently it only supports sqlite3
# Reloadable property, but see below
type = {{ tessdb_config.dbase.type | default('sqlite3') }}

# For SQLite, this is the full path name to the database file
# Not reloadable property
connection_string = {{ tessdb_config.dbase.connection_string | default(tessdb_dbase_dir + '/tess.db') }}

# Closes the database connection when pausing the program
# This is useful for special situations (i.e. moving an SQLite3 database file)
# Reloadable property
close_when_pause = {{ tessdb_config.dbase.close_when_pause | default(False) | ternary('yes','no') }}

# Directory where JSON data is located
# Not reloadable property
json_dir = {{ tessdb_config.dbase.json_dir | default('/etc/tessdb') }}

# Limit years (included) for the Date dimension (from Jan 1 to Dec 12)
# Not reloadable property.
# If changed to a lower time span it may be necessary to delete excess rows in the database
year_start = {{ tessdb_config.dbase.year_start | default(2016) }}
year_end   = {{ tessdb_config.dbase.year_end   | default(2036) }}

# Date format for the Date dimension (date field)
# Examples: (%Y/%m/%d => 2015/12/31) (%d/%m/%Y => 31/12/2015)
# Not reloadable property
# If changed to a different format, rows with the old format are kept unchanged
date_fmt = {{ tessdb_config.dbase.date_fmt | default('%d/%m/%Y') }}

# Day resolution (in seconds)
# Must be one of 60, 30, 20, 15, 12, 10, 6, 5, 4, 3, 2, 1
# If changed to a lower time span it may be necessary to delete excess rows 
# in the database
# Not reloadable property.
secs_resolution = {{ tessdb_config.dbase.secs_resolution | default(1) }}

# Authorisation filter
# Each TESS-W photometer must be authorised to write to the database
# The recommended use is to manually authorise it after the TESS photomenter
# is in place and measuring properly
# However, this can be disabled.
auth_filter =  {{ tessdb_config.dbase.auth_filter | default(True) | ternary('yes','no') }}

# general dbase namespace log level (debug, info, warn, error, critical)
# Reloadable property
log_level = {{ tessdb_config.dbase.log_level | default('info') }}

# specific dbase registration log level (debug, info, warn, error, critical)
# Reloadable property
register_log_level = {{ tessdb_config.dbase.registry_log_level | default('info') }}

