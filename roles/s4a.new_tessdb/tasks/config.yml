---

- name: create {{ new_tdb_etc_dir }} tessdb config directory if does not exists
  file: 
    path: '{{ new_tdb_etc_dir }}'
    state: directory
    owner: '{{ new_tdb_runtime_user }}'
    group: '{{ new_tdb_runtime_user }}'
    mode: '0755'

- name: copy tessdb config.toml file
  when: false
  template:
    dest: '{{ new_tdb_etc_dir }}/config.toml'
    src: config.toml.j2
    owner: '{{ new_tdb_runtime_user }}'
    group: '{{ new_tdb_runtime_user }}'
    mode: '0644'

- name: install environment file for tess-db-server service unit
  when: false
  template:
    dest: '{{ new_tdb_etc_dir }}/tessdb.env'
    src: tessdb.env.j2
    owner: '{{ new_tdb_runtime_user }}'
    group: '{{ new_tdb_runtime_user }}'
    mode: '0644'

- name: install environment file for tess-db-alarm service unit
  template:
    dest: '{{ new_tdb_etc_dir }}/tdbalarm.env'
    src: tdbalarm.env.j2
    owner: '{{ new_tdb_runtime_user }}'
    group: '{{ new_tdb_runtime_user }}'
    mode: '0644'

- name: Makes sure {{ new_tdb_service_dir }} exists
  file: 
    path: '{{ new_tdb_service_dir }}'
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Install tessdb service unit {{ new_tdb_service_dir }}/tessdb.service
  when: false
  template:
    dest: '{{ new_tdb_service_dir }}/tessdb.service'
    src: tessdb.service.j2
    owner: root
    group: root
    mode: '0644'
  register: new_tdb_systemd_changed

- name: Install tdbalarm service unit {{ new_tdb_service_dir }}/tdbalarm.service
  template:
    dest: '{{ new_tdb_service_dir }}/tdbalarm.service'
    src: tdbalarm.service.j2
    owner: root
    group: root
    mode: '0644'
  register: new_tdb_systemd_changed

- name: Install tdbalarm timer unit {{ new_tdb_service_dir }}/tdbalarm.timer
  template:
    dest: '{{ new_tdb_service_dir }}/tdbalarm.timer'
    src: tdbalarm.timer.j2
    owner: root
    group: root
    mode: '0644'
  register: new_tdb_systemd_changed

- name: create tessdb database directory if does not exists
  file: 
    path: '{{ new_tdb_dbase_dir }}'
    state: directory
    owner: '{{ new_tdb_runtime_user }}'
    group: '{{ new_tdb_runtime_user }}'
    mode: '0755'


- name: Manage the SELinux state of {{ new_tdb_venv_dir }}/.venv/bin
  community.general.sefcontext:
    target: '{{ new_tdb_venv_dir }}/.venv/bin(/.*)?'
    ftype: a
    setype: bin_t
    state: present
  register: new_tdb_selinux_venv_context
  when: true and new_tdb_selinux_enabled 
  tags: [config]

- name: Apply SELinux context to {{ new_tdb_venv_dir }}/.venv/bin
  ansible.builtin.command: restorecon -irv {{ new_tdb_venv_dir | quote }}/.venv/bin
  when: true and new_tdb_selinux_enabled and new_tdb_selinux_venv_context is changed 
  tags: [config]


- name: Manage the SELinux state of {{ new_tdb_dbase_dir }} database directory
  community.general.sefcontext:
    target: '{{ new_tdb_dbase_dir }}'
    ftype: d
    setype: var_log_t
    seuser: unconfined_u
    state: present
  register: new_tdb_selinux_db_context
  when: new_tdb_selinux_enabled
  tags: [config]

- name: Apply SELinux context changes to {{ new_tdb_dbase_dir }}
  command: restorecon -irv {{ new_tdb_dbase_dir | quote }}
  when: new_tdb_selinux_enabled and new_tdb_selinux_db_context is changed

- name: create {{ new_tdb_logrotate_dir }} if does not exists
  file: 
    path: '{{ new_tdb_logrotate_dir }}'
    state: directory
    owner: root
    group: root
    mode: '0755'
    
# File owner for this logrotate spec should be root
# as I discovered by manually running logrotate
- name: Patches tessdb logrotate
  when: false
  template: 
    dest: '{{ new_tdb_logrotate_dir }}/tessdb'
    src: logrotate.j2
    owner: root
    group: root
    mode: '0644'
